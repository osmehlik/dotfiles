#!/bin/bash

FILES=".bashrc .bash_profile .vimrc .vim"
PATHOGEN_URL="https://raw.github.com/tpope/vim-pathogen/master/autoload/pathogen.vim"
NERDTREE_URL="https://github.com/scrooloose/nerdtree.git"
SNIPMATE_URL="https://github.com/msanders/snipmate.vim.git"
VIM_COLOR_SCHEMES_URL="http://vimcolorschemetest.googlecode.com/svn/colors"
VIM_COLOR_SCHEME="dante"

function download_to () {
    WGET="`which wget`"
    if [ $? -eq 0 ]; then
        ${WGET} -O "$2" "$1" >/dev/null 2>&1
        return $?
    fi
    CURL="`which curl`"
    if [ $? -eq 0 ]; then
        echo "using curl"
        ${CURL} -o "$2" "$1" >/dev/null 2>&1
        return $?
    fi
    return 1
}

function populate_vim_dir () {
    mkdir -p .vim/{backup,colors,autoload,bundle}
    download_to \
        "${VIM_COLOR_SCHEMES_URL}/${VIM_COLOR_SCHEME}.vim" \
        ".vim/colors/${VIM_COLOR_SCHEME}.vim"
    download_to "${PATHOGEN_URL}" ".vim/autoload/pathogen.vim"
    (cd .vim/bundle && git clone "${NERDTREE_URL}" >/dev/null 2>&1)
    (cd .vim/bundle && git clone "${SNIPMATE_URL}" >/dev/null 2>&1)

    if [ $? -ne 0 ]; then
        echo "Error: Cannot download ${VIM_COLOR_SCHEME}.vim color scheme."
    fi
}

function install () {
    [ ! -d .vim ] && populate_vim_dir
    echo "Installing symbolic links"
    for FILE in $FILES; do
        if [ -e ~/$FILE ]; then
            echo "~/$FILE already exists, skipping..."
        else
            ln -vs $PWD/$FILE ~/$FILE
        fi
    done
}

function uninstall () {
    echo "Uninstalling symbolic links"
    for FILE in $FILES; do
        if [ -L ~/$FILE ]; then
            rm -v ~/$FILE
        else
            echo "~/$FILE is not a symbolic link, skipping..."
        fi
    done
}

function help() {
    echo "Usage:"
    echo "$0 action"
    echo ""
    echo "Actions:"
    echo "   install"
    echo "   uninstall"
}

function main() {
    case "$1" in
        install) install ;;
        uninstall) uninstall ;;
        *) help ;;
    esac
}

main $*

